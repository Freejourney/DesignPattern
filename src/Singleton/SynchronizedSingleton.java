package Singleton;

public class SynchronizedSingleton {

    private static SynchronizedSingleton currentInstance = null;

    private SynchronizedSingleton() {

    }

    public static synchronized SynchronizedSingleton getInstance() {
        if (currentInstance == null) {
            currentInstance = new SynchronizedSingleton();
        }

        return currentInstance;
    }
}

//make getInstance() method synchronized

//forcing all threads to line up before entering getInstance()

//It's unnecessary to threads to line up once the Instance is generated by first invoke, and it'll cost lots of time for
//all threads